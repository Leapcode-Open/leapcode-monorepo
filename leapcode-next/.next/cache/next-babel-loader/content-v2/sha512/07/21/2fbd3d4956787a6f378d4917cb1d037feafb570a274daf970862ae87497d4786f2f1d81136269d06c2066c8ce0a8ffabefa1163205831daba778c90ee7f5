{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stanly/Documents/projects/leapcode-next/providers/AuthProvider.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { auth, provider } from '../config/firebase'; //import SkeletonLoading from \"../Components/SkeletonLoading\";\n\nimport cookie from 'js-cookie';\nimport { API_HEADERS, API_URL, COOKIE_TOKEN, getToken } from \"../config/constants\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = useState(null);\n  const {\n    0: pending,\n    1: setPending\n  } = useState(true);\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n  const {\n    0: userDetails,\n    1: setUserDetails\n  } = useState(null);\n  const {\n    0: claims,\n    1: setClaims\n  } = useState(null);\n  const {\n    0: lpLoggedIn,\n    1: setLpLoggedIn\n  } = useState(false);\n\n  const signOut = () => {\n    auth().signOut().then(res => {\n      setToken(null);\n      setUserDetails(null);\n      cookie.remove(COOKIE_TOKEN);\n      window.location.href = \"/\";\n    });\n  };\n\n  const login = async () => {\n    const authUser = await auth().signInWithPopup(provider);\n    const userToken = await auth().currentUser.getIdToken();\n    const loginInfo = await fetch(API_URL + `/auth/login`, {\n      method: 'POST',\n      headers: API_HEADERS,\n      body: JSON.stringify({\n        token: userToken,\n        username: authUser.additionalUserInfo ? authUser.additionalUserInfo.username : '',\n        githubInfo: authUser.additionalUserInfo ? authUser.additionalUserInfo.profile : {}\n      })\n    });\n\n    if (!loginInfo) {\n      return signOut();\n    }\n\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    auth().onAuthStateChanged(async user => {\n      setCurrentUser(user);\n\n      if (user) {\n        const idClains = await user.getIdTokenResult();\n        setClaims(idClains);\n        const idToken = await user.getIdToken();\n        cookie.set(COOKIE_TOKEN, idToken);\n        setToken(idToken);\n        const userD = {\n          displayName: user.displayName,\n          email: user.email,\n          emailVerified: user.emailVerified,\n          photoURL: user.photoURL,\n          uid: user.uid,\n          metadata: user.metadata\n        };\n        setUserDetails(userD);\n      } else {\n        setCurrentUser(null);\n        setPending(false); //setToken(null)\n\n        cookie.remove(COOKIE_TOKEN);\n      }\n\n      setPending(false);\n    });\n  }, []); // if( pending ){\n  //   return (<div className=\"w-screen h-screen flex items-center justify-center\">\n  //     <div className=\"w-1/4 bg-white rounded-lg px-6 py-10 flex items-center flex-col\">\n  //       loading\n  //     </div>\n  //   </div>)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      authLoading: false,\n      setToken,\n      token,\n      userDetails,\n      signOut,\n      claims,\n      login\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/stanly/Documents/projects/leapcode-next/providers/AuthProvider.js"],"names":["React","useEffect","useState","auth","provider","cookie","API_HEADERS","API_URL","COOKIE_TOKEN","getToken","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","token","setToken","userDetails","setUserDetails","claims","setClaims","lpLoggedIn","setLpLoggedIn","signOut","then","res","remove","window","location","href","login","authUser","signInWithPopup","userToken","getIdToken","loginInfo","fetch","method","headers","body","JSON","stringify","username","additionalUserInfo","githubInfo","profile","reload","onAuthStateChanged","user","idClains","getIdTokenResult","idToken","set","userD","displayName","email","emailVerified","photoURL","uid","metadata","authLoading"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport { auth, provider } from '../config/firebase';\n//import SkeletonLoading from \"../Components/SkeletonLoading\";\nimport cookie from 'js-cookie';\nimport { API_HEADERS, API_URL, COOKIE_TOKEN, getToken } from \"../config/constants\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n  const [token, setToken] = useState(null);\n  const [userDetails, setUserDetails] = useState(null);\n  const [claims, setClaims] = useState(null);\n  const [lpLoggedIn, setLpLoggedIn] = useState(false);\n\n  const signOut = () => {\n    auth().signOut().then(res => {\n      setToken(null);\n      setUserDetails(null);\n      cookie.remove(COOKIE_TOKEN);\n      window.location.href=\"/\"\n    })\n  }\n\n\n  const login = async () => {\n    const authUser = await auth().signInWithPopup(provider);\n    const userToken = await auth().currentUser.getIdToken();\n    const loginInfo = await fetch(API_URL+`/auth/login`, {\n        method: 'POST',\n        headers: API_HEADERS,\n        body: JSON.stringify({\n            token: userToken,\n            username: authUser.additionalUserInfo ? authUser.additionalUserInfo.username : '',\n            githubInfo: authUser.additionalUserInfo ? authUser.additionalUserInfo.profile : {}\n        })\n    });\n\n    if(!loginInfo) {\n      return signOut();\n    }\n\n    window.location.reload()\n  }\n\n  useEffect(() => {\n    auth().onAuthStateChanged( async (user) => {\n      setCurrentUser(user)\n      if(user) {\n\n        const idClains = await user.getIdTokenResult();\n        setClaims(idClains);\n        const idToken = await user.getIdToken();\n        cookie.set(COOKIE_TOKEN, idToken);\n        setToken(idToken);\n        const userD = {\n          displayName: user.displayName,\n          email: user.email,\n          emailVerified: user.emailVerified,\n          photoURL: user.photoURL,\n          uid: user.uid,\n          metadata: user.metadata\n        }\n        setUserDetails(userD)\n      }\n      \n      else {\n        setCurrentUser(null)\n        setPending(false);\n        //setToken(null)\n        cookie.remove(COOKIE_TOKEN);\n      }\n\n      setPending(false);\n      \n    });\n  }, []);\n\n\n\n\n  // if( pending ){\n  //   return (<div className=\"w-screen h-screen flex items-center justify-center\">\n  //     <div className=\"w-1/4 bg-white rounded-lg px-6 py-10 flex items-center flex-col\">\n  //       loading\n  //     </div>\n  //   </div>)\n  // }\n\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        authLoading: false,\n        setToken,\n        token,\n        userDetails,\n        signOut,\n        claims,\n        login\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"]},"metadata":{},"sourceType":"module"}